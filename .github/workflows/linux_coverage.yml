# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "Coverage"

on:
  push:
    branches: [master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]

jobs:
  analyze_main:
    name: Analyze Local
    if: github.repository_owner == 'ParadoxGameConverters'
    runs-on: [self-hosted, linux]


    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['cpp']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 0
        submodules: recursive

    - name: "Check versions of gcc, g++ and cmake"
      run: |
       gcc -v && g++ -v && cmake --version

    - name: "Check version of gcov"
      run: |
       gcov --version

    - name: Build solution
      run: |
       cmake -H. -Bbuild && cmake --build ./build --target CommonItemsTests -- -j40

    - name: Run tests
      run: |
       cd build
       ./CommonItemsTests

    - name: Run gcov
      run: |
       cd build
       echo pwd
       pwd
       echo ls
       ls
       echo ls CMakeFiles/CommonItemsTests.dir
       ls CMakeFiles/CommonItemsTests.dir
       make gcov

    - name: Run lcov
      run: |
       cd build
       pwd
       make lcov

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: build/lcoverage/coverage.info

    - uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: build/lcoverage/

    - name: Cleanup
      uses: colpal/actions-clean@v1
      if: always() # To ensure this step runs even when earlier steps fail

  analyze:
    name: Analyze Foreign
    if: github.repository_owner != 'ParadoxGameConverters'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['cpp']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 0
        submodules: recursive

    - name: "Check versions of gcc, g++ and cmake"
      run: |
       gcc -v && g++ -v && cmake --version

    - name: "Check version of gcov"
      run: |
       gcov --version

    - name: Build solution
      run: |
       sudo add-apt-repository ppa:ubuntu-toolchain-r/test
       sudo apt-get update
       sudo apt-get install libcurl4-openssl-dev
       # Link gcc-11 and g++-11 to their standard commands
       sudo ln -s /usr/bin/gcc-11 /usr/local/bin/gcc
       sudo ln -s /usr/bin/g++-11 /usr/local/bin/g++
       sudo ln -s /usr/bin/gcov-11 /usr/local/bin/gcov
       sudo ln -s /usr/bin/lcov /usr/local/bin/lcov
       sudo ln -s /usr/bin/geninfo /usr/local/bin/geninfo
       gcov --version
       # Export CC and CXX to tell cmake which compiler to use
       export CC=/usr/bin/gcc-11
       export CXX=/usr/bin/g++-11
       # Check versions of gcc, g++ and cmake
       gcc -v && g++ -v && cmake --version
       # Run your build commands next
       cmake -H. -Bbuild && cmake --build ./build -- -j3

    - name: Run tests
      run: |
       cd build
       ./CommonItemsTests

    - name: Run gcov
      run: |
       cd build
       make gcov

    - name: Run lcov
      run: |
       cd build
       pwd
       make lcov

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: build/lcoverage/main_coverage.info

    - name: Cleanup
      uses: colpal/actions-clean@v1
      if: always() # To ensure this step runs even when earlier steps fail
